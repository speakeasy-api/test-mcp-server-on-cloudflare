/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assetRelationsDeleteAssetRelationsByAssetId } from "../../funcs/assetRelationsDeleteAssetRelationsByAssetId.js";
import { DeleteAssetRelationsByAssetIdRequest$zodSchema } from "../../models/deleteassetrelationsbyassetidop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: DeleteAssetRelationsByAssetIdRequest$zodSchema,
};

export const tool$assetRelationsDeleteAssetRelationsByAssetId: ToolDefinition<
  typeof args
> = {
  name: "delete-asset-relations",
  description: `Delete asset relations by asset ID

Unrelates the asset from other assets, specified by their asset IDs, an immutable identifier, regardless of public ID, display name, asset folder, resource type or deliver type. This is a bidirectional process, meaning that the asset will also be removed as a related_asset from all the other assets specified.`,
  scopes: ["librarian"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await assetRelationsDeleteAssetRelationsByAssetId(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
