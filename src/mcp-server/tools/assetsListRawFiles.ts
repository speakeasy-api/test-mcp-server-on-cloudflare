/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assetsListRawFiles } from "../../funcs/assetsListRawFiles.js";
import { ListRawFilesRequest$zodSchema } from "../../models/listrawfilesop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: ListRawFilesRequest$zodSchema.optional(),
};

export const tool$assetsListRawFiles: ToolDefinition<typeof args> = {
  name: "list-files",
  description: `Get raw assets

Retrieves a list of raw assets. Results can be filtered by various criteria like tags, moderation status, prefix, or specific public IDs.
`,
  scopes: ["librarian"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await assetsListRawFiles(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
