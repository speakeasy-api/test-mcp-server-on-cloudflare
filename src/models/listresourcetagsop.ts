/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiError, ApiError$zodSchema } from "./apierror.js";
import { ResourceType, ResourceType$zodSchema } from "./resourcetype.js";

export type ListResourceTagsGlobals = { cloud_name?: string | undefined };

export const ListResourceTagsGlobals$zodSchema: z.ZodType<
  ListResourceTagsGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().describe("The cloud name of your product environment.")
    .optional(),
});

export type ListResourceTagsRequest = {
  resource_type: ResourceType;
  prefix?: string | undefined;
  next_cursor?: string | undefined;
  max_results?: number | undefined;
};

export const ListResourceTagsRequest$zodSchema: z.ZodType<
  ListResourceTagsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  max_results: z.number().int().describe(
    "Maximum number of results to return (1-500).",
  ).optional(),
  next_cursor: z.string().describe("Cursor for pagination.").optional(),
  prefix: z.string().describe(
    "The prefix to use if you want to limit the returned tags to those that start with the specified prefix.",
  ).optional(),
  resource_type: ResourceType$zodSchema,
});

/**
 * List of tags retrieved
 */
export type ListResourceTagsResponseBody = {
  tags?: Array<string> | undefined;
  next_cursor?: string | null | undefined;
};

export const ListResourceTagsResponseBody$zodSchema: z.ZodType<
  ListResourceTagsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  next_cursor: z.string().nullable().optional(),
  tags: z.array(z.string()).optional(),
}).describe("List of tags retrieved");

export type ListResourceTagsResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: ListResourceTagsResponseBody | undefined;
  api_error?: ApiError | undefined;
};

export const ListResourceTagsResponse$zodSchema: z.ZodType<
  ListResourceTagsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  api_error: ApiError$zodSchema.optional(),
  object: z.lazy(() => ListResourceTagsResponseBody$zodSchema).optional(),
});
