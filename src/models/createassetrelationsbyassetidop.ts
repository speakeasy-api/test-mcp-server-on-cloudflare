/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiError, ApiError$zodSchema } from "./apierror.js";
import {
  AssetRelationsResponse,
  AssetRelationsResponse$zodSchema,
} from "./assetrelationsresponse.js";

export type CreateAssetRelationsByAssetIdGlobals = {
  cloud_name?: string | undefined;
};

export const CreateAssetRelationsByAssetIdGlobals$zodSchema: z.ZodType<
  CreateAssetRelationsByAssetIdGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().describe("The cloud name of your product environment.")
    .optional(),
});

export type CreateAssetRelationsByAssetIdRequestBody = {
  assets_to_relate: Array<string>;
};

export const CreateAssetRelationsByAssetIdRequestBody$zodSchema: z.ZodType<
  CreateAssetRelationsByAssetIdRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  assets_to_relate: z.array(z.string()),
});

export type CreateAssetRelationsByAssetIdRequest = {
  asset_id: string;
  RequestBody: CreateAssetRelationsByAssetIdRequestBody;
};

export const CreateAssetRelationsByAssetIdRequest$zodSchema: z.ZodType<
  CreateAssetRelationsByAssetIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => CreateAssetRelationsByAssetIdRequestBody$zodSchema),
  asset_id: z.string().describe(
    "The asset ID of the resource. Must be a 32-character hexadecimal string.",
  ),
});

export type CreateAssetRelationsByAssetIdResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  asset_relations_response?: AssetRelationsResponse | undefined;
  api_error?: ApiError | undefined;
};

export const CreateAssetRelationsByAssetIdResponse$zodSchema: z.ZodType<
  CreateAssetRelationsByAssetIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  api_error: ApiError$zodSchema.optional(),
  asset_relations_response: AssetRelationsResponse$zodSchema.optional(),
});
