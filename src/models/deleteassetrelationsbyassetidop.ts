/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiError, ApiError$zodSchema } from "./apierror.js";
import {
  AssetRelationsDeleteResponse,
  AssetRelationsDeleteResponse$zodSchema,
} from "./assetrelationsdeleteresponse.js";

export type DeleteAssetRelationsByAssetIdGlobals = {
  cloud_name?: string | undefined;
};

export const DeleteAssetRelationsByAssetIdGlobals$zodSchema: z.ZodType<
  DeleteAssetRelationsByAssetIdGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().describe("The cloud name of your product environment.")
    .optional(),
});

export type DeleteAssetRelationsByAssetIdRequestBody = {
  assets_to_unrelate: Array<string>;
};

export const DeleteAssetRelationsByAssetIdRequestBody$zodSchema: z.ZodType<
  DeleteAssetRelationsByAssetIdRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  assets_to_unrelate: z.array(z.string()),
});

export type DeleteAssetRelationsByAssetIdRequest = {
  asset_id: string;
  RequestBody: DeleteAssetRelationsByAssetIdRequestBody;
};

export const DeleteAssetRelationsByAssetIdRequest$zodSchema: z.ZodType<
  DeleteAssetRelationsByAssetIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => DeleteAssetRelationsByAssetIdRequestBody$zodSchema),
  asset_id: z.string().describe(
    "The asset ID of the resource. Must be a 32-character hexadecimal string.",
  ),
});

export type DeleteAssetRelationsByAssetIdResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  asset_relations_delete_response?: AssetRelationsDeleteResponse | undefined;
  api_error?: ApiError | undefined;
};

export const DeleteAssetRelationsByAssetIdResponse$zodSchema: z.ZodType<
  DeleteAssetRelationsByAssetIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  api_error: ApiError$zodSchema.optional(),
  asset_relations_delete_response: AssetRelationsDeleteResponse$zodSchema
    .optional(),
});
