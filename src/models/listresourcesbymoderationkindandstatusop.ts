/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiError, ApiError$zodSchema } from "./apierror.js";
import { Direction, Direction$zodSchema } from "./direction.js";
import { FieldsSpec, FieldsSpec$zodSchema } from "./fieldsspec.js";
import { ListResponse, ListResponse$zodSchema } from "./listresponse.js";
import { ResourceType, ResourceType$zodSchema } from "./resourcetype.js";

export type ListResourcesByModerationKindAndStatusGlobals = {
  cloud_name?: string | undefined;
};

export const ListResourcesByModerationKindAndStatusGlobals$zodSchema: z.ZodType<
  ListResourcesByModerationKindAndStatusGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().describe("The cloud name of your product environment.")
    .optional(),
});

export const ModerationKind$zodSchema = z.enum([
  "manual",
  "webpurify",
  "aws_rek",
  "aws_rek_video",
  "perception_point",
  "google_video_moderation",
  "duplicate",
]);

export type ModerationKind = z.infer<typeof ModerationKind$zodSchema>;

export const ListResourcesByModerationKindAndStatusModerationStatus$zodSchema =
  z.enum([
    "approved",
    "rejected",
    "pending",
    "queued",
    "aborted",
  ]);

export type ListResourcesByModerationKindAndStatusModerationStatus = z.infer<
  typeof ListResourcesByModerationKindAndStatusModerationStatus$zodSchema
>;

export type ListResourcesByModerationKindAndStatusRequest = {
  resource_type: ResourceType;
  moderation_kind: ModerationKind;
  moderation_status: ListResourcesByModerationKindAndStatusModerationStatus;
  fields?: Array<FieldsSpec> | undefined;
  next_cursor?: string | undefined;
  max_results?: number | undefined;
  direction?: Direction | undefined;
};

export const ListResourcesByModerationKindAndStatusRequest$zodSchema: z.ZodType<
  ListResourcesByModerationKindAndStatusRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  direction: Direction$zodSchema.optional(),
  fields: z.array(FieldsSpec$zodSchema).optional(),
  max_results: z.number().int().describe(
    "Maximum number of results to return (1-500).",
  ).optional(),
  moderation_kind: ModerationKind$zodSchema,
  moderation_status:
    ListResourcesByModerationKindAndStatusModerationStatus$zodSchema,
  next_cursor: z.string().describe("Cursor for pagination.").optional(),
  resource_type: ResourceType$zodSchema,
});

export type ListResourcesByModerationKindAndStatusResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  list_response?: ListResponse | undefined;
  api_error?: ApiError | undefined;
};

export const ListResourcesByModerationKindAndStatusResponse$zodSchema:
  z.ZodType<
    ListResourcesByModerationKindAndStatusResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    ContentType: z.string(),
    RawResponse: z.instanceof(Response),
    StatusCode: z.number().int(),
    api_error: ApiError$zodSchema.optional(),
    list_response: ListResponse$zodSchema.optional(),
  });
