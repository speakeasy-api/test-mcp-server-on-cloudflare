/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiError, ApiError$zodSchema } from "./apierror.js";

export type DeleteBackupVersionsGlobals = { cloud_name?: string | undefined };

export const DeleteBackupVersionsGlobals$zodSchema: z.ZodType<
  DeleteBackupVersionsGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().describe("The cloud name of your product environment.")
    .optional(),
});

export type DeleteBackupVersionsRequestBody = { version_ids: Array<string> };

export const DeleteBackupVersionsRequestBody$zodSchema: z.ZodType<
  DeleteBackupVersionsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  version_ids: z.array(z.string()),
});

export type DeleteBackupVersionsRequest = {
  asset_id: string;
  RequestBody: DeleteBackupVersionsRequestBody;
};

export const DeleteBackupVersionsRequest$zodSchema: z.ZodType<
  DeleteBackupVersionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => DeleteBackupVersionsRequestBody$zodSchema),
  asset_id: z.string().describe(
    "The asset ID of the resource. Must be a 32-character hexadecimal string.",
  ),
});

export type Failure = {
  version_id?: string | undefined;
  error?: string | undefined;
};

export const Failure$zodSchema: z.ZodType<Failure, z.ZodTypeDef, unknown> = z
  .object({
    error: z.string().optional(),
    version_id: z.string().optional(),
  });

/**
 * Multi-status - some versions deleted successfully, others failed
 */
export type DeleteBackupVersionsResponseBody2 = {
  asset_id: string;
  deleted_version_ids: Array<string>;
  failures?: Array<Failure> | undefined;
};

export const DeleteBackupVersionsResponseBody2$zodSchema: z.ZodType<
  DeleteBackupVersionsResponseBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  asset_id: z.string(),
  deleted_version_ids: z.array(z.string()),
  failures: z.array(z.lazy(() => Failure$zodSchema)).optional(),
}).describe("Multi-status - some versions deleted successfully, others failed");

/**
 * Backup versions successfully deleted
 */
export type DeleteBackupVersionsResponseBody1 = {
  asset_id: string;
  deleted_version_ids: Array<string>;
};

export const DeleteBackupVersionsResponseBody1$zodSchema: z.ZodType<
  DeleteBackupVersionsResponseBody1,
  z.ZodTypeDef,
  unknown
> = z.object({
  asset_id: z.string(),
  deleted_version_ids: z.array(z.string()),
}).describe("Backup versions successfully deleted");

export type DeleteBackupVersionsResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  twoHundredApplicationJsonObject?:
    | DeleteBackupVersionsResponseBody1
    | undefined;
  twoHundredAndSevenApplicationJsonObject?:
    | DeleteBackupVersionsResponseBody2
    | undefined;
  api_error?: ApiError | undefined;
};

export const DeleteBackupVersionsResponse$zodSchema: z.ZodType<
  DeleteBackupVersionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  api_error: ApiError$zodSchema.optional(),
  twoHundredAndSevenApplicationJsonObject: z.lazy(() =>
    DeleteBackupVersionsResponseBody2$zodSchema
  ).optional(),
  twoHundredApplicationJsonObject: z.lazy(() =>
    DeleteBackupVersionsResponseBody1$zodSchema
  ).optional(),
});
