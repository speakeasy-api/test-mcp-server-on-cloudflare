/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiError, ApiError$zodSchema } from "./apierror.js";
import {
  DeleteResourceByPublicIdsRequestUnion,
  DeleteResourceByPublicIdsRequestUnion$zodSchema,
} from "./deleteresourcebypublicidsrequestunion.js";
import {
  ExtendedStorageType,
  ExtendedStorageType$zodSchema,
} from "./extendedstoragetype.js";
import { ResourceType, ResourceType$zodSchema } from "./resourcetype.js";

export type DeleteResourcesByPublicIdGlobals = {
  cloud_name?: string | undefined;
};

export const DeleteResourcesByPublicIdGlobals$zodSchema: z.ZodType<
  DeleteResourcesByPublicIdGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().describe("The cloud name of your product environment.")
    .optional(),
});

export type DeleteResourcesByPublicIdRequest = {
  resource_type: ResourceType;
  type: ExtendedStorageType;
  DeleteResourceByPublicIdsRequest: DeleteResourceByPublicIdsRequestUnion;
};

export const DeleteResourcesByPublicIdRequest$zodSchema: z.ZodType<
  DeleteResourcesByPublicIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  DeleteResourceByPublicIdsRequest:
    DeleteResourceByPublicIdsRequestUnion$zodSchema,
  resource_type: ResourceType$zodSchema,
  type: ExtendedStorageType$zodSchema,
});

/**
 * Resource successfully deleted
 */
export type DeleteResourcesByPublicIdResponseBody = {};

export const DeleteResourcesByPublicIdResponseBody$zodSchema: z.ZodType<
  DeleteResourcesByPublicIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({}).describe("Resource successfully deleted");

export type DeleteResourcesByPublicIdResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: DeleteResourcesByPublicIdResponseBody | undefined;
  api_error?: ApiError | undefined;
};

export const DeleteResourcesByPublicIdResponse$zodSchema: z.ZodType<
  DeleteResourcesByPublicIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  api_error: ApiError$zodSchema.optional(),
  object: z.lazy(() => DeleteResourcesByPublicIdResponseBody$zodSchema)
    .optional(),
});
