/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Transformations = { usage?: number | undefined };

export const Transformations$zodSchema: z.ZodType<
  Transformations,
  z.ZodTypeDef,
  unknown
> = z.object({
  usage: z.number().int().optional(),
});

export type Objects = {
  usage?: number | undefined;
  limit?: number | undefined;
  used_percent?: number | undefined;
};

export const Objects$zodSchema: z.ZodType<Objects, z.ZodTypeDef, unknown> = z
  .object({
    limit: z.number().int().optional(),
    usage: z.number().int().optional(),
    used_percent: z.number().optional(),
  });

export type Bandwidth = {
  usage?: number | undefined;
  limit?: number | undefined;
  used_percent?: number | undefined;
};

export const Bandwidth$zodSchema: z.ZodType<Bandwidth, z.ZodTypeDef, unknown> =
  z.object({
    limit: z.number().int().optional(),
    usage: z.number().int().optional(),
    used_percent: z.number().optional(),
  });

export type Storage = {
  usage?: number | undefined;
  limit?: number | undefined;
  used_percent?: number | undefined;
};

export const Storage$zodSchema: z.ZodType<Storage, z.ZodTypeDef, unknown> = z
  .object({
    limit: z.number().int().optional(),
    usage: z.number().int().optional(),
    used_percent: z.number().optional(),
  });

export type Impressions = { usage?: number | undefined };

export const Impressions$zodSchema: z.ZodType<
  Impressions,
  z.ZodTypeDef,
  unknown
> = z.object({
  usage: z.number().int().optional(),
});

export type SecondsDelivered = { usage?: number | undefined };

export const SecondsDelivered$zodSchema: z.ZodType<
  SecondsDelivered,
  z.ZodTypeDef,
  unknown
> = z.object({
  usage: z.number().int().optional(),
});

/**
 * Upload size and pixel limits
 */
export type MediaLimits = {
  image_max_size_bytes?: number | undefined;
  video_max_size_bytes?: number | undefined;
  raw_max_size_bytes?: number | undefined;
  image_max_px?: number | undefined;
  asset_max_total_px?: number | undefined;
};

export const MediaLimits$zodSchema: z.ZodType<
  MediaLimits,
  z.ZodTypeDef,
  unknown
> = z.object({
  asset_max_total_px: z.number().int().optional(),
  image_max_px: z.number().int().optional(),
  image_max_size_bytes: z.number().int().optional(),
  raw_max_size_bytes: z.number().int().optional(),
  video_max_size_bytes: z.number().int().optional(),
}).describe("Upload size and pixel limits");

export type UsageResponse = {
  plan?: string | undefined;
  last_updated?: string | undefined;
  date_requested?: string | undefined;
  transformations?: Transformations | undefined;
  objects?: Objects | undefined;
  bandwidth?: Bandwidth | undefined;
  storage?: Storage | undefined;
  impressions?: Impressions | undefined;
  seconds_delivered?: SecondsDelivered | undefined;
  resources?: number | undefined;
  derived_resources?: number | undefined;
  requests?: number | undefined;
  media_limits?: MediaLimits | undefined;
};

export const UsageResponse$zodSchema: z.ZodType<
  UsageResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  bandwidth: z.lazy(() => Bandwidth$zodSchema).optional(),
  date_requested: z.string().datetime({ offset: true }).optional(),
  derived_resources: z.number().int().optional(),
  impressions: z.lazy(() => Impressions$zodSchema).optional(),
  last_updated: z.string().date().optional(),
  media_limits: z.lazy(() => MediaLimits$zodSchema).optional(),
  objects: z.lazy(() => Objects$zodSchema).optional(),
  plan: z.string().optional(),
  requests: z.number().int().optional(),
  resources: z.number().int().optional(),
  seconds_delivered: z.lazy(() => SecondsDelivered$zodSchema).optional(),
  storage: z.lazy(() => Storage$zodSchema).optional(),
  transformations: z.lazy(() => Transformations$zodSchema).optional(),
});
