/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiError, ApiError$zodSchema } from "./apierror.js";
import {
  AssetRelationsResponse,
  AssetRelationsResponse$zodSchema,
} from "./assetrelationsresponse.js";
import { ResourceType, ResourceType$zodSchema } from "./resourcetype.js";
import { StorageType, StorageType$zodSchema } from "./storagetype.js";

export type CreateAssetRelationsByPublicIdGlobals = {
  cloud_name?: string | undefined;
};

export const CreateAssetRelationsByPublicIdGlobals$zodSchema: z.ZodType<
  CreateAssetRelationsByPublicIdGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().describe("The cloud name of your product environment.")
    .optional(),
});

export type CreateAssetRelationsByPublicIdRequestBody = {
  assets_to_relate: Array<string>;
};

export const CreateAssetRelationsByPublicIdRequestBody$zodSchema: z.ZodType<
  CreateAssetRelationsByPublicIdRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  assets_to_relate: z.array(z.string()),
});

export type CreateAssetRelationsByPublicIdRequest = {
  resource_type: ResourceType;
  type: StorageType;
  public_id: string;
  RequestBody: CreateAssetRelationsByPublicIdRequestBody;
};

export const CreateAssetRelationsByPublicIdRequest$zodSchema: z.ZodType<
  CreateAssetRelationsByPublicIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() =>
    CreateAssetRelationsByPublicIdRequestBody$zodSchema
  ),
  public_id: z.string().describe("The public ID of the asset."),
  resource_type: ResourceType$zodSchema,
  type: StorageType$zodSchema,
});

export type CreateAssetRelationsByPublicIdResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  asset_relations_response?: AssetRelationsResponse | undefined;
  api_error?: ApiError | undefined;
};

export const CreateAssetRelationsByPublicIdResponse$zodSchema: z.ZodType<
  CreateAssetRelationsByPublicIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  api_error: ApiError$zodSchema.optional(),
  asset_relations_response: AssetRelationsResponse$zodSchema.optional(),
});
