/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ApiError, ApiError$zodSchema } from "./apierror.js";

export type DestroyFolderGlobals = { cloud_name?: string | undefined };

export const DestroyFolderGlobals$zodSchema: z.ZodType<
  DestroyFolderGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().describe("The cloud name of your product environment.")
    .optional(),
});

export type DestroyFolderRequest = { folder: string };

export const DestroyFolderRequest$zodSchema: z.ZodType<
  DestroyFolderRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  folder: z.string(),
});

/**
 * Folder deleted successfully
 */
export type DestroyFolderResponseBody = { deleted: Array<string> };

export const DestroyFolderResponseBody$zodSchema: z.ZodType<
  DestroyFolderResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  deleted: z.array(z.string()),
}).describe("Folder deleted successfully");

export type DestroyFolderResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: DestroyFolderResponseBody | undefined;
  api_error?: ApiError | undefined;
};

export const DestroyFolderResponse$zodSchema: z.ZodType<
  DestroyFolderResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  api_error: ApiError$zodSchema.optional(),
  object: z.lazy(() => DestroyFolderResponseBody$zodSchema).optional(),
});
